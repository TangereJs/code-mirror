(function(mod){
  mod(CodeMirror);
})(function(CodeMirror){
  "use strict";

  /*** to update the contents of this file go to code-mirror/generate-carbon-hints/index.html and copy paste the whole text in to this file ***/

  if (CodeMirror.tangereHint == undefined) {
    CodeMirror.tangereHint = {
      nowIcons: [],
      htmlSchema: {}
    };
  }

  CodeMirror.tangereHint.nowIcons = ["now:about","now:about-filled","now:administration","now:alert","now:ambulance","now:announcement","now:app","now:arrow-down","now:arrow-left","now:arrow-right","now:arrow-up","now:assistant","now:audio","now:birthday","now:blank","now:bold","now:bot","now:calendar","now:cancel","now:cards","now:caret-down","now:caret-left","now:caret-right","now:caret-up","now:chart","now:chart-bar","now:chart-doughnut","now:chart-line","now:chart-pie","now:chart-pill","now:checkbox","now:checklist","now:checkmark","now:clock","now:code","now:collapse","now:component","now:contact","now:create-new","now:database","now:delete","now:device-laptop","now:device-phone","now:devices","now:device-tablet","now:directions","now:document","now:download","now:dropdown-field","now:edit","now:end","now:error","now:error-filled","now:excel","now:exchange","now:exit","now:expand","now:faq","now:file","now:filter","now:flash","now:folder","now:form","now:gear","now:generic-text","now:group","now:hash","now:heading","now:help","now:home","now:horizontal-line","now:surface1","now:html","now:html-file","now:image-file","now:inbox","now:info","now:info-filled","now:invoice","now:italic","now:key","now:line-horizontal","now:link","now:list-bullets","now:list-numbered","now:manual","now:map","now:markdown","now:marker","now:menu","now:menu2","now:message","now:micro","now:minus","now:minus-circle","now:minus-filled","now:more","now:msaccess","now:msproject","now:number","now:onenote","now:password","now:pdf","now:phone","now:picture","now:pin","now:plane","now:play","now:plus","now:plus-circle","now:plus-filled","now:powerpoint","now:question","now:questions","now:quote","now:redo","now:restart","now:rewind","now:rss","now:schedule","now:search","now:server-cloud","now:share","now:sharepoint","now:shopping-basket","now:sort-down","now:sort-up","now:source-code","now:star","now:star-filled","now:start","now:tag","now:ten-keys","now:text-area","now:thumb-down","now:thumb-up","now:toggle","now:toolbar","now:trash","now:undo","now:unpin","now:upload","now:user","now:users","now:video","now:video-call","now:view-carousel","now:view-module","now:view-stream","now:visible","now:warning","now:warning-filled","now:weather","now:word","now:wrench"];

  CodeMirror.tangereHint.htmlSchema = {
    "at-carbon-action-button": { attrs: {disabled: {"description":"\nDisables the button when true\n\n","type":"Boolean","value":null}, xtype: {"description":"\nSets button type. Can be Submit button and Cancel button\n\n","type":"String","value":["submit","cancel"]}} },
    "at-carbon-alert": { attrs: {"cancel-button": {"description":"","type":"string","value":null}, "confirm-button": {"description":"","type":"string","value":null}, message: {"description":"","type":"string","value":null}, opened: {"description":"","type":"boolean","value":null}, title: {"description":"","type":"string","value":null}} },
    "at-carbon-badge": { attrs: {color: {"description":"","type":"string","value":null}, for: {"description":"","type":"string","value":null}, icon: {"description":"","type":"string","value":null}, label: {"description":"","type":"string","value":null}, "x-offset": {"description":"","type":"number","value":null}, "y-offset": {"description":"","type":"number","value":null}} },
    "at-carbon-button": { attrs: {active: {"description":"","type":"boolean","value":null}, "aria-active-attribute": {"description":"","type":"string","value":null}, "button-color": {"description":"","type":"string","value":["primary","confirm","decline","cancel","blue","green","orange","pink","purple","red","teal","yellow","grey","black","white"]}, "button-type": {"description":"","type":"string","value":["text","contained"]}, disabled: {"description":"","type":"boolean","value":null}, elevation: {"description":"","type":"number","value":null}, focused: {"description":"","type":"boolean","value":null}, href: {"description":"\nbutton href\n","type":"String","value":null}, icon: {"description":"\nbutton icon\n\n","type":"String","value":null}, "key-event-target": {"description":"","type":"object","value":null}, label: {"description":"\nbutton label\n\n","type":"String","value":null}, "pointer-down": {"description":"","type":"boolean","value":null}, pressed: {"description":"","type":"boolean","value":null}, raised: {"description":"","type":"boolean","value":null}, "received-focus-from-keyboard": {"description":"","type":"boolean","value":null}, "stop-keyboard-event-propagation": {"description":"","type":"boolean","value":null}, toggles: {"description":"","type":"boolean","value":null}} },
    "at-carbon-button-group": { attrs: {buttons: {"description":"","type":"array","value":null}, "max-buttons": {"description":"","type":"number","value":null}, "more-icon": {"description":"","type":"string","value":null}, "more-label": {"description":"","type":"string","value":null}, value: {"description":"","type":"string","value":null}} },
    "at-carbon-button-menu": { attrs: {"button-color": {"description":"","type":"string","value":["primary","confirm","decline","cancel","blue","green","orange","pink","purple","red","teal","yellow","grey","black","white"]}, "button-type": {"description":"","type":"string","value":["text","contained"]}, icon: {"description":"","type":"string","value":null}, items: {"description":"","type":"array","value":null}, "item-view": {"description":"","type":"string","value":null}, label: {"description":"","type":"string","value":null}, position: {"description":"","type":"string","value":["topLeft","topRight","bottomLeft","bottomRight"]}, "select-mode": {"description":"","type":"string","value":["event","link"]}} },
    "at-carbon-card": { attrs: {"bottom-icon": {"description":"","type":"string","value":null}, "bottom-icon-color": {"description":"","type":"string","value":null}, "color-bottom": {"description":"","type":"string","value":null}, "color-left": {"description":"","type":"string","value":null}, "color-right": {"description":"","type":"string","value":null}, "color-top": {"description":"","type":"string","value":null}, "left-icon": {"description":"","type":"string","value":null}, "left-icon-color": {"description":"","type":"string","value":null}, "right-icon": {"description":"","type":"string","value":null}, "right-icon-color": {"description":"","type":"string","value":null}, swipeable: {"description":"","type":"boolean","value":null}, "swipe-threshold": {"description":"\nIf card is swipped for more than swipeThreshold % of its width\naction defined for that swipe will be executed\n\n","type":"Number","value":null}, "top-icon": {"description":"","type":"string","value":null}, "top-icon-color": {"description":"","type":"string","value":null}} },
    "at-carbon-card-footer": { attrs: {expandable: {"description":"\nWhen true toggle icon is displayed. When false toggle icon is hidden.\n\n","type":"Boolean","value":null}, href: {"description":"\nLink href\n\n","type":"String","value":null}, label: {"description":"\nLink label\n\n","type":"String","value":null}, model: {"description":"","type":"object","value":null}, "model-bind": {"description":"","type":"string","value":null}, "model-root": {"description":"\nmodelRoot\n\n","type":"String","value":null}, value: {"description":"\nWhen false denotes collapsed state. When true denotes expanded state.\n\n","type":"Boolean","value":null}, xref: {"description":"\nLink xref\n\n","type":"String","value":null}} },
    "at-carbon-card-title": { attrs: {customizable: {"description":"","type":"boolean","value":null}, "customize-label": {"description":"","type":"string","value":null}, label: {"description":"","type":"string","value":null}, links: {"description":"","type":"array","value":null}, position: {"description":"","type":"string","value":["top","bottom"]}, revealed: {"description":"","type":"boolean","value":null}} },
    "at-carbon-clamp": { attrs: {lines: {"description":"","type":"number","value":null}, text: {"description":"","type":"string","value":null}} },
    "at-carbon-collapse": { attrs: {content: {"description":"","type":"string","value":null}, "icon-position": {"description":"","type":"string","value":["left","right","right-justified"]}, opened: {"description":"","type":"boolean","value":null}, title: {"description":"","type":"string","value":null}} },
    "at-carbon-date-picker": { attrs: {"end-date": {"description":"\nholds the string value of the endDate of the date picker\n","type":"String","value":null}, mode: {"description":"\nHolds the mode of operation for date-picker.\nThree possible values \"single\", \"range-start\" and \"range-end\"\nsingle is used for at-form-date which operates on only one value\nrange-start and range-end are used for at-form-daterange which operates on start/end values\n","type":"String","value":["single","start-range","end-range"]}, "start-date": {"description":"\nholds the string value of the startDate of the date picker\n","type":"String","value":null}} },
    "at-carbon-dialog": { attrs: {"always-on-top": {"description":"","type":"boolean","value":null}, "animation-config": {"description":"","type":"object","value":null}, "auto-fit-on-attach": {"description":"","type":"boolean","value":null}, canceled: {"description":"","type":"boolean","value":null}, "closing-reason": {"description":"","type":"object","value":null}, "dynamic-align": {"description":"","type":"boolean","value":null}, "entry-animation": {"description":"","type":"string","value":null}, "exit-animation": {"description":"","type":"string","value":null}, "fit-into": {"description":"","type":"object","value":null}, "horizontal-align": {"description":"","type":"string","value":null}, "horizontal-offset": {"description":"","type":"number","value":null}, modal: {"description":"","type":"boolean","value":null}, "no-auto-focus": {"description":"","type":"boolean","value":null}, "no-cancel-on-esc-key": {"description":"","type":"boolean","value":null}, "no-cancel-on-outside-click": {"description":"","type":"boolean","value":null}, "no-overlap": {"description":"","type":"boolean","value":null}, opened: {"description":"","type":"boolean","value":null}, "position-target": {"description":"","type":"element","value":null}, "restore-focus-on-close": {"description":"","type":"boolean","value":null}, "sizing-target": {"description":"","type":"object","value":null}, "vertical-align": {"description":"","type":"string","value":null}, "vertical-offset": {"description":"","type":"number","value":null}, "with-backdrop": {"description":"","type":"boolean","value":null}} },
    "at-carbon-empty-state": { attrs: {html: {"description":"","type":"string","value":null}, icon: {"description":"","type":"string","value":null}} },
    "at-carbon-icon": { attrs: {icon: {"description":"","type":"string","value":null}, src: {"description":"","type":"string","value":null}, theme: {"description":"","type":"string","value":null}} },
    "at-carbon-icon-button": { attrs: {active: {"description":"","type":"boolean","value":null}, alt: {"description":"","type":"string","value":null}, "aria-active-attribute": {"description":"","type":"string","value":null}, color: {"description":"","type":"string","value":null}, disabled: {"description":"","type":"boolean","value":null}, focused: {"description":"","type":"boolean","value":null}, icon: {"description":"","type":"string","value":null}, "key-event-target": {"description":"","type":"object","value":null}, noink: {"description":"","type":"boolean","value":null}, "pointer-down": {"description":"","type":"boolean","value":null}, pressed: {"description":"","type":"boolean","value":null}, "received-focus-from-keyboard": {"description":"","type":"boolean","value":null}, "stop-keyboard-event-propagation": {"description":"","type":"boolean","value":null}, toggles: {"description":"","type":"boolean","value":null}} },
    "at-carbon-icon-color": { attrs: {color: {"description":"","type":"string","value":null}, icon: {"description":"","type":"string","value":null}} },
    "at-carbon-iframe-button": { attrs: {icon: {"description":"","type":"string","value":null}, label: {"description":"","type":"string","value":null}, url: {"description":"","type":"string","value":null}} },
    "at-carbon-menu": { attrs: {items: {"description":"","type":"array","value":null}, "item-view": {"description":"","type":"string","value":null}, value: {"description":"","type":"string","value":null}} },
    "at-carbon-menu-button": { attrs: {color: {"description":"","type":"string","value":null}, disabled: {"description":"","type":"boolean","value":null}, icon: {"description":"","type":"string","value":null}, items: {"description":"","type":"array","value":null}, "item-view": {"description":"","type":"string","value":null}, open: {"description":"","type":"boolean","value":null}, position: {"description":"","type":"string","value":["topLeft","topRight","bottomLeft","bottomRight"]}, value: {"description":"","type":"string","value":null}, "x-offset": {"description":"","type":"number","value":null}, "y-offset": {"description":"","type":"number","value":null}} },
    "at-carbon-message": { attrs: {html: {"description":"","type":"string","value":null}, type: {"description":"","type":"string","value":["warning","info","error","success"]}} },
    "at-carbon-moment": { attrs: {ago: {"description":"","type":"boolean","value":null}, "auto-refresh": {"description":"","type":"boolean","value":null}, "auto-refresh-rate": {"description":"","type":"number","value":null}, datetime: {"description":"","type":"string","value":null}, "default-auto-refresh-rate": {"description":"","type":"number","value":null}, format: {"description":"","type":"string","value":null}, formats: {"description":"","type":"array","value":null}, "from-now": {"description":"","type":"boolean","value":null}, "interval-id": {"description":"","type":"number","value":null}, language: {"description":"","type":"string","value":null}, moment: {"description":"","type":"object","value":null}, "no-suffix": {"description":"","type":"boolean","value":null}, strict: {"description":"","type":"boolean","value":null}, "unix-offset": {"description":"\nnumber of miliseconds since Unix Epoch (Jan 1 1970 12AM UTC)\n\n","type":"Number","value":null}, "unix-timestamp": {"description":"\nnumber of seconds since Unix Epoch (Jan 1 1970 12AM UTC)\n\n","type":"Number","value":null}, utc: {"description":"","type":"boolean","value":null}} },
    "at-carbon-pager": { attrs: {hide: {"description":"","type":"boolean","value":null}, "item-count": {"description":"","type":"number","value":null}, page: {"description":"","type":"number","value":null}, "page-size": {"description":"","type":"number","value":null}} },
    "at-carbon-popup": { attrs: {"force-align": {"description":"","type":"boolean","value":null}, halign: {"description":"","type":"string","value":null}, spacing: {"description":"","type":"object","value":null}, valign: {"description":"","type":"string","value":null}} },
    "at-carbon-popup-content": { attrs: {dragging: {"description":"","type":"boolean","value":null}, "is-narrow": {"description":"","type":"boolean","value":null}, "is-open": {"description":"","type":"boolean","value":null}} },
    "at-carbon-progress": { attrs: {max: {"description":"","type":"number","value":null}, value: {"description":"","type":"number","value":null}} },
    "at-carbon-resolver": { attrs: {"item-root": {"description":"","type":"string","value":null}, "model-root": {"description":"","type":"string","value":null}, value: {"description":"","type":"object","value":null}} },
    "at-carbon-sidebar": { attrs: {items: {"description":"","type":"array","value":null}, mode: {"description":"","type":"string","value":["open","icons","hidden"]}} },
    "at-carbon-signal-button": { attrs: {"button-color": {"description":"","type":"string","value":["primary","confirm","decline","cancel","blue","green","orange","pink","purple","red","teal","yellow","grey","black","white"]}, "button-type": {"description":"","type":"string","value":["text","contained"]}, disabled: {"description":"","type":"boolean","value":null}, icon: {"description":"","type":"string","value":null}, label: {"description":"","type":"string","value":null}, signal: {"description":"","type":"string","value":null}, "signal-data": {"description":"","type":"string","value":null}} },
    "at-carbon-tab": { attrs: {"badge-color": {"description":"","type":"string","value":null}, "badge-label": {"description":"","type":"string","value":null}, label: {"description":"","type":"string","value":null}} },
    "at-carbon-tabs": { attrs: {"align-bottom": {"description":"","type":"boolean","value":null}, "attr-for-selected": {"description":"","type":"string","value":null}, "disable-drag": {"description":"","type":"boolean","value":null}, "hide-scroll-button": {"description":"","type":"boolean","value":null}, nobar: {"description":"","type":"boolean","value":null}, noslide: {"description":"","type":"boolean","value":null}, scrollable: {"description":"","type":"boolean","value":null}, selected: {"description":"","type":"string","value":null}} },
    "at-carbon-time-picker": { attrs: {value: {"description":"","type":"string","value":null}} },
    "at-carbon-tooltip": { attrs: {"animation-config": {"description":"","type":"object","value":null}, "animation-delay": {"description":"","type":"number","value":null}, "entry-animation": {"description":"","type":"string","value":null}, "exit-animation": {"description":"","type":"string","value":null}, "fit-to-visible-bounds": {"description":"","type":"boolean","value":null}, for: {"description":"","type":"string","value":null}, "manual-mode": {"description":"","type":"boolean","value":null}, "margin-top": {"description":"","type":"number","value":null}, offset: {"description":"","type":"number","value":null}, position: {"description":"","type":"string","value":["top","right","bottom","left"]}} },
    "at-carbon-tree": { attrs: {actions: {"description":"","type":"array","value":null}, data: {"description":"","type":"array","value":null}, value: {"description":"","type":"string","value":null}} },
    "at-carbon-tree-node": { attrs: {actions: {"description":"","type":"array","value":null}, data: {"description":"","type":"object","value":null}} },
    "at-carbon-video": { attrs: {"aspect-ratio": {"description":"\naspect ratio - video aspect ratio\nsupported values are 4:3 and 16:9\n","type":"String","value":["4:3","16:9"]}, "autohide-controls": {"description":"\nautohideControls - timeout after video controls are automatically hidden\nthis attribute doesn't work with youtube player\n","type":"Number","value":null}, autoplay: {"description":"\nautoplay - if true video will start playing after it loads\n","type":"Boolean","value":null}, controls: {"description":"\ncontrols - if true controls will be displayed; false hides the controls\nthis attribute doesn't work with youtube player\n","type":"Boolean","value":null}, "current-time": {"description":"\ncurrentTime - start time at which video should start in seconds\n","type":"Number","value":null}, height: {"description":"\nheight - height of the video area in px\n","type":"String","value":null}, loop: {"description":"\nloop - if true video will be played again from the begining when it finishes\nthis attribute doesn't work with youtube player\n","type":"Boolean","value":null}, muted: {"description":"\nmuted - true mutes the audio\n","type":"Boolean","value":null}, preload: {"description":"\npreload - if true video will be preloaded; if false it will be loaded on play\nthis attribute doesn't work with youtube player\n","type":"Boolean","value":null}, src: {"description":"\nsrc - path or url to the video file\nSupply a relative path if video is hosted inside your domain\nSupply a remote url if video is hosted outside your domain\n","type":"String","value":null}, thumbnail: {"description":"\nthumbnail - path or url to the image file that will be displayed as thumbnail\nthis attribute doesn't work with youtube player\n","type":"String","value":null}, "video-volume": {"description":"\nvideoVolume - audio volume in %\nmin is 0, max is 100\n","type":"Number","value":null}, width: {"description":"\nwidth - width of the video area in px\n","type":"String","value":null}} },
    "at-carbon-view-button": { attrs: {arrow: {"description":"\nIf true an arrow will be displayed at the specified position\n\n","type":"Boolean","value":null}, color: {"description":"","type":"string","value":null}, disabled: {"description":"","type":"boolean","value":null}, icon: {"description":"","type":"string","value":null}, model: {"description":"","type":"object","value":null}, "model-root": {"description":"","type":"string","value":null}, placeholder: {"description":"","type":"string","value":null}, position: {"description":"","type":"string","value":["topLeft","topRight","bottomLeft","bottomRight"]}, "toggle-only": {"description":"","type":"boolean","value":null}, value: {"description":"","type":"object","value":null}, view: {"description":"","type":"string","value":null}, "x-offset": {"description":"","type":"number","value":null}, "y-offset": {"description":"","type":"number","value":null}} },
    "at-chart-core": { attrs: {c3chart: {"description":"","type":"object","value":null}, charttype: {"description":"","type":"string","value":["bar","line","pie","donut","spline","step","area","area-spline","default"]}, data: {"description":"","type":"object","value":null}, gridlines: {"description":"","type":"string","value":["none","y","x","xy"]}, legendposition: {"description":"","type":"string","value":["none","bottom","right","inset"]}, tooltip: {"description":"","type":"string","value":["none","default","grouped"]}} },
    "at-chart-inline": { attrs: {"chart-type": {"description":"","type":"string","value":["line","pie"]}, "color-scheme": {"description":"\nselects a color scheme to be used\n","type":"string","value":["category10","category20","category20b","category20c","google10c","google20c"]}, data: {"description":"","type":"object","value":null}, "data-column": {"description":"","type":"string","value":null}, hide: {"description":"","type":"boolean","value":null}, "pixels-per-data-point": {"description":"","type":"number","value":null}} },
    "at-chart-strudel": { attrs: {"color-scheme": {"description":"\nselects a color scheme to be used\n","type":"string","value":["category10","category20","category20b","category20c","google10c","google20c"]}, data: {"description":"","type":"object","value":null}, "model-root": {"description":"","type":"string","value":null}} },
    "at-core-activity": { attrs: {"active-requests": {"description":"","type":"array","value":null}, auto: {"description":"","type":"boolean","value":null}, body: {"description":"","type":"string","value":null}, "content-type": {"description":"","type":"string","value":null}, "disable-authorization": {"description":"","type":"boolean","value":null}, "disable-error-code-handler": {"description":"\nWhen set to true and error is received from remote data source, container element will receive both error event and response event. Container should use error event to process the error message and response event to process the response\n\n","type":"Boolean","value":null}, "handle-as": {"description":"","type":"string","value":null}, headers: {"description":"","type":"object","value":null}, indicator: {"description":"","type":"boolean","value":null}, "last-error": {"description":"","type":"object","value":null}, "last-request": {"description":"","type":"object","value":null}, "last-response": {"description":"","type":"object","value":null}, loading: {"description":"","type":"boolean","value":null}, method: {"description":"","type":"string","value":null}, "no-credentials": {"description":"","type":"boolean","value":null}, params: {"description":"","type":"object","value":null}, sync: {"description":"","type":"boolean","value":null}, url: {"description":"","type":"string","value":null}, verbose: {"description":"","type":"boolean","value":null}, "with-credentials": {"description":"","type":"boolean","value":null}} },
    "at-core-api-post": { attrs: {busy: {"description":"","type":"boolean","value":null}, url: {"description":"","type":"string","value":null}} },
    "at-core-busy": { attrs: {type: {"description":"","type":"string","value":null}} },
    "at-core-card": { attrs: {"no-curve": {"description":"","type":"boolean","value":null}, "offset-ratio": {"description":"","type":"number","value":null}, removing: {"description":"","type":"boolean","value":null}, sort: {"description":"","type":"string","value":null}, swipeable: {"description":"","type":"boolean","value":null}, "width-ratio": {"description":"","type":"number","value":null}} },
    "at-core-cardlayout": { attrs: {"auto-sort": {"description":"","type":"boolean","value":null}, "card-layout-data": {"description":"","type":"string","value":null}, masonry: {"description":"","type":"boolean","value":null}, "sizing-container": {"description":"","type":"object","value":null}, sortable: {"description":"","type":"boolean","value":null}} },
    "at-core-cardlayout-desktop": { attrs: {"auto-sort": {"description":"","type":"boolean","value":null}, boxes: {"description":"","type":"object","value":null}, "card-layout-data": {"description":"","type":"string","value":null}, "card-layout-pos": {"description":"","type":"string","value":null}, "card-layout-timeout": {"description":"","type":"string","value":null}, columns: {"description":"","type":"array","value":null}, masonry: {"description":"","type":"boolean","value":null}, "min-col-width": {"description":"","type":"number","value":null}, sortable: {"description":"","type":"boolean","value":null}} },
    "at-core-cardlayout-mobile": { attrs: {"card-layout-data": {"description":"","type":"string","value":null}, "card-layout-pos": {"description":"","type":"string","value":null}, "card-layout-timeout": {"description":"","type":"string","value":null}} },
    "at-core-cardlist": { attrs: {"card-width": {"description":"","type":"number","value":null}, "empty-list": {"description":"","type":"string","value":null}, indicator: {"description":"","type":"boolean","value":null}, "item-component": {"description":"","type":"string","value":null}, items: {"description":"","type":"array","value":null}, layout: {"description":"","type":"string","value":null}, view: {"description":"","type":"string","value":null}} },
    "at-core-carousel": { attrs: {"card-width": {"description":"","type":"number","value":null}, "center-mode": {"description":"","type":"string","value":["0","1","2"]}, "empty-list": {"description":"","type":"string","value":null}, "info-text": {"description":"","type":"string","value":null}, "item-card-wrapper": {"description":"","type":"boolean","value":null}, "item-component": {"description":"","type":"string","value":null}, items: {"description":"","type":"array","value":null}, "max-items": {"description":"","type":"number","value":null}, mode: {"description":"","type":"string","value":["static","bound"]}, "model-root": {"description":"","type":"string","value":null}, "more-title": {"description":"","type":"string","value":null}, "more-url": {"description":"","type":"string","value":null}, "navigation-as-overlay": {"description":"","type":"boolean","value":null}, "space-between": {"description":"","type":"number","value":null}} },
    "at-core-class-toggle": { attrs: {"class-off": {"description":"","type":"string","value":null}, "class-on": {"description":"","type":"string","value":null}, for: {"description":"","type":"string","value":null}, "icon-off": {"description":"","type":"string","value":null}, "icon-on": {"description":"","type":"string","value":null}, value: {"description":"","type":"string","value":["on","off"]}} },
    "at-core-dashboard-echo": { attrs: {"model-root": {"description":"","type":"string","value":null}, template: {"description":"","type":"string","value":null}} },
    "at-core-dframe": { attrs: {"device-type": {"description":"","type":"string","value":["iphone5s_silver","iphone6_black","iphone6_silver","ipad_silver","nexus5","macbook"]}, "max-height": {"description":"","type":"number","value":null}, "max-width": {"description":"","type":"number","value":null}, orientation: {"description":"","type":"string","value":["portrait","landscape"]}, src: {"description":"","type":"string","value":null}} },
    "at-core-dropdown": { attrs: {arrow: {"description":"\nIf true an arrow will be displayed at the specified position\n\n","type":"Boolean","value":null}, "no-mask": {"description":"","type":"boolean","value":null}, open: {"description":"\nTrue when dropdown is open, false otherwise\nset to true to open the dropdown, set to false to close it\n\n","type":"Boolean","value":null}, position: {"description":"","type":"string","value":["topLeft","topRight","bottomLeft","bottomRight"]}, "x-offset": {"description":"\nPositive value moves element to the right. Negative value moves element to the left\n\n","type":"Number","value":null}, "y-offset": {"description":"\nPositive value moves element to the top. Negative value moves element to the bottom\n\n","type":"Number","value":null}} },
    "at-core-dropdown-impl": { attrs: {arrow: {"description":"","type":"boolean","value":null}, "no-mask": {"description":"","type":"boolean","value":null}, open: {"description":"","type":"boolean","value":null}, position: {"description":"","type":"string","value":["topLeft","topRight","bottomLeft","bottomRight"]}, "x-offset": {"description":"","type":"number","value":null}, "y-offset": {"description":"","type":"number","value":null}} },
    "at-core-form": { attrs: {"active-tab": {"description":"\nholds the value of the currently active tab when sectionMode === tab <br/>\nhas value of \"\" when sectionMode === default\n\n","type":"string","value":null}, data: {"description":"\nHolds values of the elements on the form\n\n","type":"Object | String","value":null}, disabled: {"description":"\nWhen true disables all elements on the form\n","type":"Boolean","value":null}, files: {"description":"","type":"object","value":null}, hide: {"description":"\nWhen true hides all elements.\n","type":"Boolean","value":null}, layout: {"description":"\nat-core-form can now have a one column or two column layout <br/>\nby default a one column layout is used but a two column layout can be specified <br/>\nlayout = 'horizontal' renders the two column layout <br/>\nlayout = 'vertical' renders the single column layout <br/>\n\n","type":"string","value":null}, placeholder: {"description":"","type":"string","value":null}, schema: {"description":"\nSpecification of elements that should appear on the form.<br/>\nProvide either an object or string.<br/>\nList property definitions inside properties object.<br/>\n\n","type":"Object | Stirng","value":null}, "section-mode": {"description":"\nat-core-form sectionMode governs the rendering of at-form-section <br/>\nsectionMode === default, renders at-form-section as a heading\nsectionMode === tab, renders at-form-section as a tab\nall form-section elements form a tab group\niron-pages hold the elements belonging to a tab group\nclicking a tab changes elements currently visible on screen\n\n","type":"string","value":["sections","tabs","auto","mobile"]}, valid: {"description":"\nValid state of the form. When all elements on the form are valid form is valid. If at least one element on the form is invalid, form is invalid\n","type":"Boolean","value":null}} },
    "at-core-iframe": { attrs: {accesskey: {"description":"\nA key label or list of key labels with which to associate the element; each key label represents a keyboard shortcut which UAs can use to activate the element or give focus to the element.\nAn ordered set of unique space-separated tokens, each of which must be exactly one Unicode code point in length.\n","type":"String","value":null}, "allow-fullscreen": {"description":"\nThis attribute can be set to true if the frame is allowed to be placed into full screen mode by calling its Element.requestFullscreen() method.\nIf this isn't set, the element can't be placed into full screen mode.\n","type":"Boolean","value":null}, contenteditable: {"description":"\ncontenteditable - Specifies whether the contents of the element are editable.\n","type":"Boolean","value":null}, contextmenu: {"description":"\ncontextmenu - The value of the id attribute on the menu with which to associate the element as a context menu.\n","type":"String","value":null}, dir: {"description":"\ndir - Specifies the element’s text directionality.\n","type":"String","value":null}, draggable: {"description":"\ndraggable - Specifies whether the element is draggable.\n","type":"Boolean","value":null}, frameborder: {"description":"\nThe value 1 (the default) tells the browser to draw a border between this frame and every other frame.\nThe value 0 tells the browser not to draw a border between this frame and other frames.\n","type":"String","value":["0","1"]}, height: {"description":"\nheight - Give the height of the visual content of the element, in CSS pixels.\n","type":"String","value":null}, hidden: {"description":"\nhidden - Specifies that the element represents an element that is not yet, or is no longer, relevant.\n","type":"Boolean","value":null}, lang: {"description":"\nlang - A unique identifier for the element. <br/>\nThere must not be multiple elements in a document that have the same id value. <br/>\nAny string, with the following restrictions: <br/>\n1. must be at least one character long  <br/>\n2. must not contain any space characters\n","type":"String","value":null}, sandbox: {"description":"\nsandbox - Enables a set of extra restrictions on any content hosted by the iframe.\nPossible values allow-same-origin/ allow-top-navigation/ allow-forms/ allow-scripts\n","type":"String","value":["","allow-same-origin","allow-top-navigation","allow-forms","allow-scripts"]}, scrolling: {"description":"\nEnumerated attribute indicating when the browser should provide a scroll bar (or other scrolling device) for the frame\n","type":"String","value":["auto","yes","no"]}, spellcheck: {"description":"\nspellcheck - Specifies the primary language for the contents of the element and for any of the element’s attributes that contain text. <br/>\nA valid language tag, as defined in [BCP47].\n","type":"Boolean","value":null}, src: {"description":"\nsrc - Gives the address of a page that the nested browsing context is to contain.\n","type":"String","value":null}, tabindex: {"description":"\ntabindex - Specifies whether the element represents an element that is is focusable (that is, an element which is part of the sequence of focusable elements in the document), and the relative order of the element in the sequence of focusable elements in the document.\n","type":"Number","value":null}, title: {"description":"\ntitle - Advisory information associated with the element.\n","type":"String","value":null}, width: {"description":"\nwidth - Give the width of the visual content of the element, in CSS pixels\n","type":"String","value":null}} },
    "at-core-iframe-modal": { attrs: {url: {"description":"","type":"string","value":null}} },
    "at-core-item": { attrs: {"item-component": {"description":"","type":"string","value":null}, value: {"description":"","type":"object","value":null}, view: {"description":"","type":"string","value":null}} },
    "at-core-kanban": { attrs: {"card-height": {"description":"","type":"string","value":null}, "card-width": {"description":"","type":"string","value":null}, "column-path": {"description":"","type":"string","value":null}, columns: {"description":"","type":"array","value":null}, "empty-list": {"description":"","type":"string","value":null}, "item-component": {"description":"","type":"string","value":null}, items: {"description":"","type":"array","value":null}, view: {"description":"","type":"string","value":null}} },
    "at-core-kanban-column": { attrs: {id: {"description":"","type":"string","value":null}, title: {"description":"","type":"string","value":null}} },
    "at-core-list": { attrs: {"card-height": {"description":"","type":"string","value":null}, "card-width": {"description":"","type":"string","value":null}, "empty-list": {"description":"","type":"string","value":null}, height: {"description":"","type":"string","value":null}, indicator: {"description":"","type":"boolean","value":null}, "item-component": {"description":"","type":"string","value":null}, items: {"description":"","type":"array","value":null}, layout: {"description":"","type":"string","value":null}, view: {"description":"","type":"string","value":null}} },
    "at-core-markdown": { attrs: {text: {"description":"","type":"string","value":null}} },
    "at-core-media-query": { attrs: {full: {"description":"","type":"boolean","value":null}, query: {"description":"","type":"string","value":null}, "query-matches": {"description":"","type":"boolean","value":null}} },
    "at-core-mic": { attrs: {"alternate-icon": {"description":"","type":"string","value":null}, "complete-transcript": {"description":"\nAlternate icon name which is shown when no voice recognition is available.\n\n","type":"string","value":null}, language: {"description":"\nSpecifies the language of the speech synthesis for the utterance.\n\n","type":"string","value":null}, recognition: {"description":"","type":"object","value":null}, transcript: {"description":"\nReturns the current transcript string.\n\n","type":"string","value":null}} },
    "at-core-modal": { attrs: {"is-open": {"description":"","type":"boolean","value":null}, "min-width": {"description":"","type":"string","value":null}, name: {"description":"","type":"string","value":null}, title: {"description":"","type":"string","value":null}, wide: {"description":"","type":"boolean","value":null}} },
    "at-core-modal-element": { attrs: {"element-class": {"description":"","type":"string","value":null}, "element-name": {"description":"","type":"string","value":null}, schema: {"description":"","type":"object","value":null}, "schema-url": {"description":"","type":"string","value":null}, value: {"description":"","type":"object","value":null}, wide: {"description":"","type":"boolean","value":null}} },
    "at-core-pdf": { attrs: {"aspect-ratio": {"description":"\naspectRatio - used to dynamically calculate height of the pdf render container based on its width\n","type":"String","value":["a4","letter","4:3","16:9"]}, src: {"description":"\nsrc - uri of the pdf document to be displayed\n","type":"String","value":null}} },
    "at-core-propform": { attrs: {"element-instance": {"description":"","type":"object","value":null}, hide: {"description":"","type":"boolean","value":null}, mode: {"description":"","type":"string","value":["default","designer"]}, "title-mode": {"description":"","type":"string","value":["title","propertyName"]}, value: {"description":"","type":"object","value":null}} },
    "at-core-resize-sensor": { attrs: {mode: {"description":"","type":"string","value":null}} },
    "at-core-router": { attrs: {caption: {"description":"","type":"string","value":null}, context: {"description":"","type":"object","value":null}, "default-color": {"description":"","type":"string","value":null}, "default-view": {"description":"","type":"string","value":null}, "enable-back": {"description":"","type":"boolean","value":null}, "primary-color": {"description":"","type":"string","value":null}} },
    "at-core-searchbox": { attrs: {"change-on-keypress": {"description":"\nwhen true search-term-changed will be fired each time user input changes\n\n","type":"Boolean","value":null}, icon: {"description":"","type":"string","value":null}, language: {"description":"","type":"string","value":null}, placeholder: {"description":"","type":"string","value":null}, "search-term": {"description":"","type":"string","value":null}, "type-write": {"description":"","type":"string","value":null}} },
    "at-core-signals": { attrs: {} },
    "at-core-sortable": { attrs: {animation: {"description":"","type":"number","value":null}, "chosen-class": {"description":"","type":"string","value":null}, "data-id-attr": {"description":"","type":"string","value":null}, delay: {"description":"","type":"number","value":null}, disabled: {"description":"","type":"boolean","value":null}, draggable: {"description":"","type":"object","value":null}, "dragover-bubble": {"description":"","type":"boolean","value":null}, "drop-bubble": {"description":"","type":"boolean","value":null}, "fallback-class": {"description":"","type":"string","value":null}, "fallback-on-body": {"description":"","type":"boolean","value":null}, filter: {"description":"","type":"object","value":null}, "force-fallback": {"description":"","type":"boolean","value":null}, "ghost-class": {"description":"","type":"string","value":null}, group: {"description":"","type":"object","value":null}, handle: {"description":"","type":"string","value":null}, ignore: {"description":"","type":"string","value":null}, scroll: {"description":"","type":"object","value":null}, "scroll-sensitivity": {"description":"","type":"number","value":null}, "scroll-speed": {"description":"","type":"number","value":null}, sort: {"description":"","type":"boolean","value":null}, store: {"description":"","type":"object","value":null}} },
    "at-core-spinner": { attrs: {display: {"description":"","type":"string","value":null}, type: {"description":"","type":"string","value":null}} },
    "at-core-splitter": { attrs: {"allow-overflow": {"description":"\nBy default the parent and siblings of the splitter are set to overflow hidden. This helps\navoid elements bleeding outside the splitter regions. Set this property to true to allow\nthese elements to overflow.\n\n","type":"boolean","value":null}, direction: {"description":"\nPossible values are `left`, `right`, `up` and `down`.\n\n","type":"string","value":null}, locked: {"description":"\nLocks the split bar so it can't be dragged.\n\n","type":"boolean","value":null}, "min-size": {"description":"\nMinimum width to which the splitter target can be sized, e.g.\n`minSize=\"100px\"`\n\n","type":"string","value":null}} },
    "at-core-theme": { attrs: {theme: {"description":"","type":"string","value":null}} },
    "at-core-video": { attrs: {"autohide-controls": {"description":"\nautohideControls - timeout after video controls are automatically hidden\n","type":"Number","value":null}, autoplay: {"description":"\nautoplay - if true video will start playing after it loads\n","type":"Boolean","value":null}, controls: {"description":"\ncontrols - if true controls will be displayed; false hides the controls\n","type":"Boolean","value":null}, "current-time": {"description":"\ncurrentTime - start time at which video should start in seconds\n","type":"Number","value":null}, height: {"description":"\nheight - height of the video area in px\n","type":"Number","value":null}, loop: {"description":"\nloop - if true video will be played again from the begining when it finishes\n","type":"Boolean","value":null}, muted: {"description":"\nmuted - true mutes the audio\n","type":"Boolean","value":null}, preload: {"description":"\npreload - if true video will be preloaded; if false it will be loaded on play\n","type":"Boolean","value":null}, src: {"description":"\nsrc - path or url to the video file\nSupply a relative path if video is hosted inside your domain\nSupply a remote url if video is hosted outside your domain\n","type":"String","value":null}, tabindex: {"description":"","type":"number","value":null}, thumbnail: {"description":"\nthumbnail - path or url to the image file that will be displayed as thumbnail\n","type":"String","value":null}, "video-volume": {"description":"\nvideoVolume - audio volume in %\nmin is 0, max is 100\n","type":"Number","value":null}, width: {"description":"\nwidth - width of the video area in px\n","type":"Number","value":null}} },
    "at-core-view": { attrs: {model: {"description":"","type":"object","value":null}, "model-root": {"description":"","type":"string","value":null}, placeholder: {"description":"","type":"string","value":null}, "update-mode": {"description":"\nControls the DOM update mode\nWhen \"0\" , innerHTML is used to update\nWhen \"1\" , setDOM is used to update\n\n","type":"String","value":["0","1","2"]}, value: {"description":"","type":"object","value":null}, view: {"description":"","type":"string","value":null}} },
    "at-doc-demo": { attrs: {auto: {"description":"","type":"boolean","value":null}, hide: {"description":"","type":"boolean","value":null}, url: {"description":"","type":"string","value":null}} },
    "at-doc-element": { attrs: {auto: {"description":"\nWhen true, url will be automatically generated\n\n","type":"Boolean","value":null}, readme: {"description":"\nWhen true, readme file for the element will be downloaded and displayed\n\n","type":"Boolean","value":null}, url: {"description":"\nUrl to fetch the element from. Details for specified element will be displayed\n\n","type":"String","value":null}, "_parser-data": {"description":"\nHolds the data from the parser\n\n","type":"Object","value":null}} },
    "at-doc-parser": { attrs: {url: {"description":"","type":"string","value":null}, value: {"description":"","type":"object","value":null}} },
    "at-doc-snippet": { attrs: {layout: {"description":"\nElements' layout\n\n","type":"String","value":null}, mode: {"description":"\nSyntax highlighting mode\n\n","type":"String","value":["htmlmixed","carbon","javascript","css","markdown","text/x-sql","xml","liquid","application/json","yaml","markdown"]}, snippet: {"description":"\nsnippet\n\n","type":"String","value":null}} },
    "at-doc-viewer": { attrs: {auto: {"description":"","type":"boolean","value":null}, readme: {"description":"\nreadme - if true, readme.md file will be read and displayed in a separate tab\n","type":"Boolean","value":null}, url: {"description":"","type":"string","value":null}} },
    "at-elements-catalog": { attrs: {catalog: {"description":"","type":"array","value":null}} },
    "at-form": { attrs: {data: {"description":"","type":"object","value":null}, layout: {"description":"","type":"string","value":null}, schema: {"description":"","type":"object","value":null}, url: {"description":"","type":"string","value":null}} },
    "at-form-ajax": { attrs: {mode: {"description":"","type":"string","value":["c","u","r"]}, "post-mode": {"description":"","type":"string","value":["json","formdata"]}, "record-id": {"description":"","type":"string","value":null}, schema: {"description":"","type":"object","value":null}, "schema-url": {"description":"","type":"string","value":null}, url: {"description":"","type":"string","value":null}} },
    "at-form-array": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nWhen true disables all elements on the form\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true hides the label for the element\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\nTextual label for the element\n","type":"String","value":null}, layout: {"description":"\nLayout for the element\nThis is used to change layout of the at-form-complex that is used as row renderer\nand to govern row header rendering\n\n","type":"String","value":["vertical","horizontal"]}, required: {"description":"\nWhen true array must have at least one item\n","type":"Boolean","value":null}, schema: {"description":"\nSpecification of elements that should appear on the element.<br/>\nProvide either an object or string.<br/>\nList property definitions inside properties object.<br/>\n\n","type":"Object | Stirng","value":null}, value: {"description":"\nHolds values of the elements on the element\n\n","type":"Array | String","value":null}} },
    "at-form-checkbox": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\n","type":"String","value":null}, negate: {"description":"\nwhen negate is set the value is negated - so checked == false, unchecked == true\n\n","type":"Boolean","value":null}, required: {"description":"\n","type":"Boolean","value":null}, value: {"description":"\n","type":"Object","value":null}, xtype: {"description":"\n","type":"String","value":["","toggle"]}} },
    "at-form-checkbox-list": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true label is hidden\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, placeholder: {"description":"","type":"string","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, url: {"description":"","type":"string","value":null}, value: {"description":"\nElement's value\n","type":"String","value":null}, xvaluelist: {"description":"\nList of availble options provided as array of { title, value } pairs\n","type":"Array","value":null}} },
    "at-form-codemirror": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, "change-on-keypress": {"description":"\nif true value-changed event will be fired after each change made in codemirror editor\n\n","type":"Boolean","value":null}, disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nHides element's label\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, "max-chars": {"description":"","type":"number","value":null}, "max-lines": {"description":"\nMaximum number of lines allowed on the element before vertical scroll bar is used\n","type":"Number","value":null}, mode: {"description":"\nSyntax highlighting mode\n","type":"String","value":["htmlmixed","carbon","javascript","css","markdown","text/x-sql","xml","ssml","liquid","liquid-ssml","liquid-markdown","liquid-json","application/json","yaml"]}, "no-line-numbers": {"description":"\nNo line numbers. Set to true to hide line numbers\n","type":"Boolean","value":null}, readonly: {"description":"\nWhen true, text content is not editable\n\n","type":"Boolean","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, "tab-size": {"description":"\nTab size\n","type":"Number","value":null}, theme: {"description":"\nColor theme\n","type":"String","value":["default","carbon"]}, value: {"description":"\nElements value\n","type":"String","value":null}} },
    "at-form-complex": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nWhen true disables all elements on the form\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true hides the label for the element\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\nTextual label for the element\n","type":"String","value":null}, placeholder: {"description":"","type":"string","value":null}, schema: {"description":"\nSpecification of elements that should appear on the element.<br/>\nProvide either an object or string.<br/>\nList property definitions inside properties object.<br/>\n\n","type":"Object | Stirng","value":null}, value: {"description":"\nHolds values of the elements on the element\n\n","type":"Object | String","value":null}, _layout: {"description":"\n_layout <br>\nadded as support for rendering rows in at-form-array <br>\n_layout = horizontal lays out elements in a horizontal line <br>\n_layout = vertical lays out elements in a single vertical column <br>\n","type":"String","value":null}} },
    "at-form-cron": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true label is hidden\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, value: {"description":"\nElements value\n","type":"String","value":null}} },
    "at-form-date": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"","type":"boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, format: {"description":"\nFormating is based [moment.js](http://momentjs.com/). A list of supported tokens in format can be found in the [moment.js documentation](http://momentjs.com/docs/#/displaying/).\n","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"","type":"boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"","type":"string","value":null}, required: {"description":"","type":"boolean","value":null}, value: {"description":"","type":"string","value":null}, xtype: {"description":"","type":"string","value":null}} },
    "at-form-daterange": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"","type":"boolean","value":null}, "end-date": {"description":"","type":"string","value":null}, "error-message": {"description":"","type":"string","value":null}, format: {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"","type":"boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"","type":"string","value":null}, required: {"description":"","type":"boolean","value":null}, "start-date": {"description":"","type":"string","value":null}, value: {"description":"","type":"string","value":null}} },
    "at-form-file": { attrs: {accept: {"description":"\nIf you want to restrict the types of files that the file chooser\nwill allow your user's to select, you can make use of an `accept`\nproperty, passing one or more MIME types as comma-separated values.\nPlease note that [browser support for this property is poor and implementations vary](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Input#Browser_compatibility).\n\n","type":"string","value":null}, "auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nDisabled state of the element; true = disabled, false = enabled\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, extensions: {"description":"\nThis is a validation property that allows you to filter out any\nfiles that do not contain a specific extension.  The value of this\nproperty is a JSON array string, containing all extensions to keep.\nYou can also negate your extension array by including a `!` sign\njust before the array's opening bracket.\n\n","type":"String","value":null}, files: {"description":"\nArray of javascript File objects so that contents of selected files can be read\n","type":"Array of javascript File objects","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nHides the label\n","type":"String","value":null}, hint: {"description":"","type":"string","value":null}, icon: {"description":"\nName of the icon\n","type":"String","value":null}, label: {"description":"\nLabel for the element\n","type":"String","value":null}, "max-files": {"description":"\nIf you'd like to limit the number of files to accept from your\nusers, specify this as an integer value for the `maxFiles` property.\n\nFor example, to only accept 3 files:\n\n    <file-input maxFiles=\"3\">\n        Select Files\n    </file-input>\n\nIf you'd like to completely prevent users from selecting more\nthan one file from the file chooser, you can simply set\n`maxFiles` to 1:\n\n    <file-input maxFiles=\"1\">\n        Select Files\n    </file-input>\n\n","type":"integer","value":null}, "max-size": {"description":"\nMaximum acceptable file size for the purposes of validation.\nThe value is expected to be in bytes.\n\n","type":"Number","value":null}, "min-size": {"description":"\nMinimum acceptable file size for the purposes of validation.\nThe value is expected to be in bytes.\n\n","type":"Number","value":null}, required: {"description":"\nRequired state of the element; true = required, false = optional\n","type":"Boolean","value":null}, value: {"description":"\nValue of the element contains array of valid files and a count of invalid files\n\n","type":"Object","value":null}} },
    "at-form-html": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, formats: {"description":"\nWhitelist for all formats to allow. Defaults to enable all formats\n","type":"Array","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nHides element's label\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, "max-chars": {"description":"","type":"number","value":null}, "max-lines": {"description":"\nMaximum number of characters across all lines allowed on the element. Use 0 (zero) for no limit\n","type":"Number","value":null}, "ops-mode": {"description":"\nOps Mode if true value will be emitted as quill delta. If false value will be emitted as html\n","type":"Boolean","value":null}, placeholder: {"description":"\nPlaceholder when there is no content\n","type":"String","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, theme: {"description":"\nThe Quill theme. Choose either \"snow\" or \"bubble\".\n","type":"String","value":["snow","bubble"]}, "toolbar-mode": {"description":"\nType of toolbar. Standard toolbar has basic functions.\nWhen false, full toolbar is displayed.\n","type":"Boolean","value":["default","full"]}, value: {"description":"\nElements value\n","type":"String","value":null}} },
    "at-form-image": { attrs: {accept: {"description":"\nIf you want to restrict the types of files that the file chooser\nwill allow your user's to select, you can make use of an `accept`\nproperty, passing one or more MIME types as comma-separated values.\nPlease note that [browser support for this property is poor and implementations vary](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Input#Browser_compatibility).\n\n","type":"string","value":null}, "auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nDisabled state of the element; true = disabled, false = enabled\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, extensions: {"description":"\nThis is a validation property that allows you to filter out any\nfiles that do not contain a specific extension.  The value of this\nattribute is a JSON array string, containing all extensions to keep.\nYou can also negate your extension array by including a `!` sign\njust before the array's opening bracket.\n\n","type":"String","value":null}, files: {"description":"\nArray of javascript File objects so that contents of selected files can be read\n","type":"Array of javascript File objects","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nHides the label\n","type":"String","value":null}, hint: {"description":"","type":"string","value":null}, icon: {"description":"\nName of the icon\n","type":"String","value":null}, label: {"description":"\nLabel for the element\n","type":"String","value":null}, "max-files": {"description":"\nIf you'd like to limit the number of files to accept from your\nusers, specify this as an integer value for the `maxFiles` property.\n\nFor example, to only accept 3 files:\n\n    <file-input maxFiles=\"3\">\n        Select Files\n    </file-input>\n\nIf you'd like to completely prevent users from selecting more\nthan one file from the file chooser, you can simply set\n`maxFiles` to 1:\n\n    <file-input maxFiles=\"1\">\n        Select Files\n    </file-input>\n\n","type":"integer","value":null}, "max-size": {"description":"\nMaximum acceptable file size for the purposes of validation.\nThe value is expected to be in bytes.\n\n","type":"Number","value":null}, "min-size": {"description":"\nMinimum acceptable file size for the purposes of validation.\nThe value is expected to be in bytes.\n\n","type":"Number","value":null}, required: {"description":"\nRequired state of the element; true = required, false = optional\n","type":"Boolean","value":null}, value: {"description":"\nValue of the element contains array of valid files and a count of invalid files\n\n","type":"Object","value":null}} },
    "at-form-input": { attrs: {disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\n","type":"Boolean","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, name: {"description":"\nElement's name for form submission purposes\n","type":"String","value":null}, placeholder: {"description":"\nElement's placeholder text for element display purposes\n","type":"String","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, type: {"description":"\nElement's type for element display and validation purposes\n","type":"String","value":null}, valid: {"description":"\nElement's valid state for element validation purposes\nnotify: true - outside world should be notified when element's valid state changes\nreadOnly: true - outside world is not able to change element's status since its element's internal state\n","type":"Boolean","value":null}, value: {"description":"\nElement's required status for element validation purposes\nnotify: true outside world should be notified that element's value has changed\nthis is achieved via autoamtic value-changed event\nobserver: 'valueChanged' outside world should be able to set/update the element's value\ncomponent is notified about this via valueChanged callback function\n","type":"String","value":null}} },
    "at-form-like": { attrs: {"allow-diselect": {"description":"\nwhen true clicking on the selected thumb desects the thumb \nvalue 1 -> 0 and -1 -> 0\n\n","type":"Boolean","value":null}, layout: {"description":"\nLayout of the thumb icons. Possible values are vertical and horizontal\n\n","type":"String","value":["vertical","horizontal"]}, value: {"description":"\nValue of the element. Possible values are \n-1: thumb down selected\n 0: none selected\n 1: thumb up selected\n","type":"Number","value":["-1","0","1"]}} },
    "at-form-lookup": { attrs: {"allow-new-items": {"description":"\nWhen true new entries are created when no matching record is found\n","type":"Boolean","value":null}, "auto-validate": {"description":"","type":"boolean","value":null}, available: {"description":"\nThe list of items that should initially be present for selection\nvalue should be provided as a comma separated values (CSV) string\n","type":"String","value":null}, disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, "empty-label": {"description":"\nTitle for the option with empty string value\n","type":"String","value":null}, enum: {"description":"\nThe list of items that should initially be present for selection\nvalue should be provided as an array of strings\n","type":"Array","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nHides label when true\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, "initial-search-term": {"description":"\ninitialSearchTerm - when set/changed the current values are cleared and it behaves like having typed that value\n","type":"String","value":null}, "item-view": {"description":"\nLiquid template to render options in the dropdown with\n\n","type":"String","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, "max-items": {"description":"\nMaximum count of items that can be selected\n","type":"Number","value":null}, "no-credentials": {"description":"\nWhen true no authentication is sent to the server\n","type":"Boolean","value":null}, "no-preload": {"description":"\nWhen true initial request to popluate the available items is not set\n","type":"Boolean","value":null}, params: {"description":"\nAdditional params to send with each request\n","type":"String","value":null}, placeholder: {"description":"\nElement's placeholder\n","type":"String","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, "selected-items": {"description":"\nElements value as an array of selected objects\n","type":"Array","value":null}, url: {"description":"\nRemote url from where to get items from\n","type":"String","value":null}, value: {"description":"\nElements value. Value is a CSV string\n","type":"String","value":null}, xurl: {"description":"\nRemote url from where to get items from\n","type":"String","value":null}, xvaluelist: {"description":"\nThe list of items that should initially be present for selection\nvalue should be provided as an array of title, value objects\n","type":"Array","value":null}, "_view-model": {"description":"\nview model objects that holds internal state of the element\n\n","type":"Object","value":null}} },
    "at-form-markdown": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"","type":"boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"","type":"boolean","value":null}, hint: {"description":"","type":"string","value":null}, "inline-attachment-extra-params": {"description":"","type":"object","value":null}, "inline-attachment-json-field-name": {"description":"","type":"string","value":null}, "inline-attachment-upload-url": {"description":"","type":"string","value":null}, label: {"description":"","type":"string","value":null}, required: {"description":"","type":"boolean","value":null}, value: {"description":"","type":"string","value":null}} },
    "at-form-modal": { attrs: {disabled: {"description":"\nWhen true disables all elements on the form\n","type":"Boolean","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true hides the label for the element\n","type":"Boolean","value":null}, icon: {"description":"","type":"string","value":null}, label: {"description":"\nTextual label for the element\n","type":"String","value":null}, "modal-title": {"description":"\nLabel for the modal window. If not set or set to empty string label property is used instead\n\n","type":"String","value":null}, schema: {"description":"\nSpecification of elements that should appear on the element.<br/>\nProvide either an object or string.<br/>\nList property definitions inside properties object.<br/>\n\n","type":"Object | Stirng","value":null}, "schema-url": {"description":"","type":"string","value":null}, value: {"description":"\nHolds values of the elements on the element\n\n","type":"Object | String","value":null}, wide: {"description":"","type":"boolean","value":null}} },
    "at-form-number": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nHides title when true\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, "max-value": {"description":"\nMaximum value allowed\n\n","type":"String","value":null}, "min-value": {"description":"\nMinimum value allowed\n\n","type":"String","value":null}, placeholder: {"description":"\nElement's placeholder text for element display purposes\n","type":"String","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, value: {"description":"\nElements value\n","type":"String","value":null}} },
    "at-form-password": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true label is hidden\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, "max-chars": {"description":"\nMaximum number of characters allowed in value\nIf 0, any number of characters is allowed\n","type":"Number","value":null}, placeholder: {"description":"\nElement's placeholder text for element display purposes\n","type":"String","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, value: {"description":"\nElements value\n","type":"String","value":null}} },
    "at-form-picker": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true label is hidden\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, icon: {"description":"","type":"string","value":null}, label: {"description":"\nElement's label\n","type":"String","value":null}, "modal-component": {"description":"","type":"string","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, url: {"description":"","type":"string","value":null}, value: {"description":"","type":"string","value":null}} },
    "at-form-radio": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true label is hidden\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, value: {"description":"\nElement's value\n","type":"String","value":null}, xvaluelist: {"description":"\nList of availble options provided as array of { title, value } pairs\n","type":"Array","value":null}} },
    "at-form-random": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true label is hidden\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, "max-chars": {"description":"\nMaximum number of characters allowed in value\nIf 0, any number of characters is allowed\n","type":"Number","value":null}, placeholder: {"description":"\nElement's placeholder text for element display purposes\n","type":"String","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, value: {"description":"\nElements value\n","type":"String","value":null}} },
    "at-form-ruleset": { attrs: {disabled: {"description":"\nWhen true element is disabled; user input is not possible\n","type":"Boolean","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true label is hidden\n","type":"Boolean","value":null}, label: {"description":"\nElements label\n","type":"String","value":null}, "rule-config": {"description":"\nElement configuration; for conditions and actions\n","type":"Object","value":null}, value: {"description":"\nElement's value\n","type":"Array","value":null}} },
    "at-form-section": { attrs: {hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true label is not displayed\n","type":"Boolean","value":null}, label: {"description":"\nElement's label\n","type":"String","value":null}} },
    "at-form-state": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true label is hidden\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, value: {"description":"\nElement's value\n","type":"String","value":null}, xvaluelist: {"description":"\nList of availble options provided as array of { title, value } pairs\n","type":"Array","value":null}} },
    "at-form-static": { attrs: {hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true label is hidden\n","type":"Boolean","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, value: {"description":"\nElements value\n","type":"String","value":null}} },
    "at-form-text": { attrs: {"auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nElement's disabled state\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true label is hidden\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, label: {"description":"\nElement's label for element display purposes\n","type":"String","value":null}, "max-chars": {"description":"\nMaximum number of characters allowed in value\nIf 0, any number of characters is allowed\n","type":"Number","value":null}, placeholder: {"description":"\nElement's placeholder text for element display purposes\n","type":"String","value":null}, required: {"description":"\nElement's required state for element validation purposes\n","type":"Boolean","value":null}, value: {"description":"\nElements value\n","type":"String","value":null}} },
    "at-form-textarea": { attrs: {"autogrow-line-limit": {"description":"\ntextarea will autogrow up to autogrow line limit\nabove the limit vertical scrollbar will be displyed\n","type":"Number","value":null}, "auto-validate": {"description":"","type":"boolean","value":null}, disabled: {"description":"\nWhen true element is disabled\n","type":"Boolean","value":null}, "error-message": {"description":"","type":"string","value":null}, hide: {"description":"\nHides the element. When hidden nothing is displayed for the element\n","type":"Boolean","value":null}, "hide-label": {"description":"\nWhen true label is hidden\n","type":"Boolean","value":null}, hint: {"description":"","type":"string","value":null}, "initial-lines": {"description":"\nCount of initially displayed lines even if they do not have text in them\n","type":"Number","value":null}, label: {"description":"\nElement's label\n","type":"String","value":null}, "max-chars": {"description":"\nMaxmimum count of characters allowed in value.\nUse 0 for no limit\n","type":"Number","value":null}, "max-lines": {"description":"\nMaxmimum count of lines allowed in value.\nUse 0 for no limit\n","type":"Number","value":null}, required: {"description":"\nWhen true element must have value\n","type":"Boolean","value":null}, value: {"description":"","type":"string","value":null}, "-value": {"description":"\nValue of the element\n","type":"String","value":null}} },
    "at-journey": { attrs: {"cards-refresh": {"description":"","type":"string","value":null}, "device-type": {"description":"","type":"string","value":["","iphone5s_silver","iphone6_black","iphone6_silver","ipad_silver","nexus5","macbook"]}, "item-component": {"description":"","type":"string","value":null}, orientation: {"description":"","type":"string","value":["","portrait","landscape"]}, "type-write": {"description":"","type":"string","value":null}, url: {"description":"","type":"string","value":null}, view: {"description":"","type":"string","value":null}} },
    "at-link": { attrs: {href: {"description":"","type":"string","value":null}, label: {"description":"","type":"string","value":null}, signal: {"description":"","type":"string","value":null}, "signal-data": {"description":"","type":"string","value":null}, xref: {"description":"","type":"string","value":null}} },
    "at-map-google": { attrs: {"api-key": {"description":"\nA Maps API key. To obtain an API key, see https://developers.google.com/maps/documentation/javascript/tutorial#api_key.\n","type":"String","value":null}, "client-id": {"description":"\nOverrides the origin the Maps API is loaded from. Defaults to `https://maps.googleapis.com`.\n","type":"String","value":null}, "disable-default-ui": {"description":"\nIf set, removes the map's default UI controls.\n","type":"Boolean","value":null}, "disable-map-type-control": {"description":"\nIf set, removes the map's 'map type' UI controls.\n","type":"Boolean","value":null}, "disable-street-view-control": {"description":"\nIf set, removes the map's 'street view' UI controls.\n","type":"Boolean","value":null}, "disable-zoom": {"description":"\nIf true, prevent the user from zooming the map interactively.\n","type":"Boolean","value":null}, "fit-to-markers": {"description":"\nIf set, the zoom level is set such that all markers (google-map-marker children) are brought into view.\n","type":"Boolean","value":null}, hide: {"description":"","type":"boolean","value":null}, latitude: {"description":"","type":"number","value":null}, longitude: {"description":"","type":"number","value":null}, "map-type": {"description":"\nMap type to display. One of 'roadmap', 'satellite', 'hybrid', 'terrain'.\n","type":"String","value":["roadmap","satellite","hybrid","terrain"]}, markers: {"description":"","type":"array","value":null}} },
    "at-rule-actions": { attrs: {config: {"description":"","type":"object","value":null}, disabled: {"description":"","type":"boolean","value":null}, "hide-label": {"description":"","type":"boolean","value":null}, label: {"description":"","type":"string","value":null}, schema: {"description":"","type":"object","value":null}, value: {"description":"","type":"array","value":null}} },
    "at-rule-conditions": { attrs: {config: {"description":"","type":"array","value":null}, disabled: {"description":"","type":"boolean","value":null}, "hide-label": {"description":"","type":"boolean","value":null}, label: {"description":"","type":"string","value":null}, schema: {"description":"","type":"object","value":null}, value: {"description":"","type":"object","value":null}} },
    "at-rule-edit": { attrs: {disabled: {"description":"\nWhen true disables the rule editing\n\n","type":"Boolean","value":null}, "rule-config": {"description":"\nRule config is an object with conditions array (with conditions definitions) and \nactions object (with actions definitions)\n\n","type":"Object","value":null}, schema: {"description":"\nSchema is an object of standard at-schema structure\n\n","type":"Object","value":null}, value: {"description":"\nValue for conditions and actions\n\n","type":"Object","value":null}} },
    "at-silver-adaptive": { attrs: {"host-config": {"description":"\nobject or json representation of style values that will be used to render adaptive card\n\n","type":"String | Object","value":null}, model: {"description":"\nthe model object that will be used to render the liquid template\n\n","type":"Object","value":null}, "model-root": {"description":"\npath to the sub-object / value inside .model to use as data to render the liquid template\n\n","type":"String","value":null}, placeholder: {"description":"\nhtml to be used as placeholder while element is rendering the adaptive card content\n\n","type":"String","value":null}, view: {"description":"\njson representation of adaptive card. Must be a string with or without liquid markup\n\n","type":"String","value":null}} },
    "at-silver-cards": { attrs: {"card-layout": {"description":"","type":"string","value":null}, "hide-search-box": {"description":"","type":"boolean","value":null}, "item-component": {"description":"","type":"string","value":null}, page: {"description":"","type":"number","value":null}, "page-size": {"description":"","type":"number","value":null}, "search-term": {"description":"","type":"string","value":null}, service: {"description":"","type":"string","value":null}, value: {"description":"","type":"object","value":null}, view: {"description":"","type":"string","value":null}} },
    "at-silver-datasource": { attrs: {method: {"description":"","type":"string","value":null}, parameter: {"description":"","type":"string","value":null}, value: {"description":"","type":"object","value":null}} },
    "at-silver-folder": { attrs: {"card-height": {"description":"","type":"string","value":null}, "card-layout": {"description":"","type":"string","value":null}, "file-component": {"description":"","type":"string","value":null}, "folder-component": {"description":"","type":"string","value":null}, gid: {"description":"","type":"string","value":null}, "hide-search-box": {"description":"","type":"boolean","value":null}, page: {"description":"","type":"number","value":null}, "page-size": {"description":"","type":"number","value":null}, "search-placeholder": {"description":"","type":"string","value":null}, "search-term": {"description":"","type":"string","value":null}, service: {"description":"","type":"string","value":null}, value: {"description":"","type":"object","value":null}, view: {"description":"","type":"string","value":null}} },
    "at-silver-form": { attrs: {"auto-app-title": {"description":"","type":"boolean","value":null}, mode: {"description":"","type":"string","value":["c","u","r"]}, "post-mode": {"description":"","type":"string","value":["json","formdata"]}, "record-id": {"description":"","type":"string","value":null}, "redirect-url": {"description":"","type":"string","value":null}, schema: {"description":"","type":"object","value":null}, "schema-url": {"description":"","type":"string","value":null}, "success-message": {"description":"","type":"string","value":null}, url: {"description":"","type":"string","value":null}} },
    "at-silver-item": { attrs: {"auto-app-title": {"description":"","type":"boolean","value":null}, gid: {"description":"","type":"string","value":null}, "item-component": {"description":"","type":"string","value":null}, service: {"description":"","type":"string","value":null}, url: {"description":"","type":"string","value":null}, value: {"description":"","type":"object","value":null}, view: {"description":"","type":"string","value":null}} },
    "at-silver-list": { attrs: {"card-height": {"description":"","type":"string","value":null}, "card-layout": {"description":"","type":"string","value":null}, "hide-search-box": {"description":"","type":"boolean","value":null}, "item-component": {"description":"","type":"string","value":null}, page: {"description":"","type":"number","value":null}, "page-size": {"description":"","type":"number","value":null}, "search-placeholder": {"description":"","type":"string","value":null}, "search-term": {"description":"","type":"string","value":null}, service: {"description":"","type":"string","value":null}, value: {"description":"","type":"object","value":null}, view: {"description":"","type":"string","value":null}} },
    "at-silver-navlist": { attrs: {"card-height": {"description":"","type":"string","value":null}, "card-layout": {"description":"","type":"string","value":null}, "item-component": {"description":"","type":"string","value":null}, navlist: {"description":"","type":"array","value":null}, value: {"description":"","type":"object","value":null}, view: {"description":"","type":"string","value":null}} },
    "at-silver-script": { attrs: {script: {"description":"","type":"string","value":null}, value: {"description":"","type":"string","value":null}} },
    "at-silver-transform": { attrs: {template: {"description":"","type":"string","value":null}, value: {"description":"","type":"string","value":null}} },
    "at-youtube-player": { attrs: {"aspect-ratio": {"description":"","type":"string","value":["4:3","16:9"]}, autoplay: {"description":"","type":"boolean","value":null}, "current-time": {"description":"","type":"number","value":null}, height: {"description":"","type":"string","value":null}, muted: {"description":"","type":"boolean","value":null}, src: {"description":"","type":"string","value":null}, "video-volume": {"description":"","type":"number","value":null}, width: {"description":"","type":"string","value":null}} }
  };
});
